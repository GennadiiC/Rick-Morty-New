{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/rick-morty/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useGetEpisodeForCharacterQuery } from \"../redux/rickMortyApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Character = _ref => {\n  _s();\n\n  let {\n    name,\n    species,\n    gender,\n    location,\n    episode,\n    status,\n    created\n  } = _ref;\n  const [clicked, setClicked] = useState(false);\n  let idsArr = episode.map(ep => Number(ep.slice(-2).replace('/', '')));\n  let ids = idsArr.join(',');\n  const {\n    data: episodes,\n    isFetching,\n    isSuccess,\n    isError,\n    error\n  } = useGetEpisodeForCharacterQuery(ids);\n\n  function episodeString(value) {\n    if (Array.isArray(episodes)) {\n      return episodes.filter(ep => ep.value === value).join(', ');\n    } else {\n      return episodes.value;\n    }\n  }\n\n  const classToggle = () => {\n    setClicked(!clicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", name, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !clicked ? \"d-none\" : null,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Species: \", species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Episode(s):\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"series: \", isSuccess ? episodeString(episode) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"title: \", isSuccess ? episodeString(name) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), isSuccess ? console.log(episodes) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classToggle(),\n      children: !clicked ? 'Show Info' : 'Hide Info'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Character, \"CzlfxpuJwFSITrfTlIR5VPahc7M=\", false, function () {\n  return [useGetEpisodeForCharacterQuery];\n});\n\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["useState","useGetEpisodeForCharacterQuery","Character","name","species","gender","location","episode","status","created","clicked","setClicked","idsArr","map","ep","Number","slice","replace","ids","join","data","episodes","isFetching","isSuccess","isError","error","episodeString","value","Array","isArray","filter","classToggle","console","log"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty/src/components/Character.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useGetEpisodeForCharacterQuery } from \"../redux/rickMortyApi\";\n\nexport const Character = ({ \n  name, \n  species, \n  gender,  \n  location,\n  episode, \n  status,\n  created\n}) => {\n\n  const [ clicked, setClicked ] = useState(false)\n\n  let idsArr = episode.map(ep => Number(ep.slice(-2).replace('/', '')))\n  let ids = idsArr.join(',')\n\n  const { data: episodes, isFetching, isSuccess, isError, error } = useGetEpisodeForCharacterQuery(ids)\n\n  function episodeString (value) {\n    if (Array.isArray(episodes)) {\n      return episodes.filter(ep => ep.value === value).join(', ')\n    } else {\n      return episodes.value\n    }\n  }\n\n  const classToggle = () => {\n    setClicked(!clicked)\n  }\n\n  return ( \n    <div>\n      <div>\n        <p>Name: {name}, <span>Status: {status}</span></p>  \n      </div>\n      <div className={!clicked ? \"d-none\" : null}>\n         <p>Species: {species}</p>\n         <p>Gender: {gender}</p>\n         <p>Location: {location.name}</p>\n         <div>Episode(s):\n           <div>series: {isSuccess ? episodeString(episode) : null}</div>\n           <div>title: {isSuccess ? episodeString(name) : null}</div>\n         </div>\n         {isSuccess ? console.log(episodes) : null}\n      </div>\n      <button onClick={() => classToggle()}>{!clicked ? 'Show Info' : 'Hide Info'}</button>\n    </div>\n  )\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,8BAAT,QAA+C,uBAA/C;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAQnB;EAAA;;EAAA,IARoB;IACxBC,IADwB;IAExBC,OAFwB;IAGxBC,MAHwB;IAIxBC,QAJwB;IAKxBC,OALwB;IAMxBC,MANwB;IAOxBC;EAPwB,CAQpB;EAEJ,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;EAEA,IAAIY,MAAM,GAAGL,OAAO,CAACM,GAAR,CAAYC,EAAE,IAAIC,MAAM,CAACD,EAAE,CAACE,KAAH,CAAS,CAAC,CAAV,EAAaC,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CAAD,CAAxB,CAAb;EACA,IAAIC,GAAG,GAAGN,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAV;EAEA,MAAM;IAAEC,IAAI,EAAEC,QAAR;IAAkBC,UAAlB;IAA8BC,SAA9B;IAAyCC,OAAzC;IAAkDC;EAAlD,IAA4DxB,8BAA8B,CAACiB,GAAD,CAAhG;;EAEA,SAASQ,aAAT,CAAwBC,KAAxB,EAA+B;IAC7B,IAAIC,KAAK,CAACC,OAAN,CAAcR,QAAd,CAAJ,EAA6B;MAC3B,OAAOA,QAAQ,CAACS,MAAT,CAAgBhB,EAAE,IAAIA,EAAE,CAACa,KAAH,KAAaA,KAAnC,EAA0CR,IAA1C,CAA+C,IAA/C,CAAP;IACD,CAFD,MAEO;MACL,OAAOE,QAAQ,CAACM,KAAhB;IACD;EACF;;EAED,MAAMI,WAAW,GAAG,MAAM;IACxBpB,UAAU,CAAC,CAACD,OAAF,CAAV;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,qBAAUP,IAAV,qBAAiB;UAAA,uBAAeK,MAAf;QAAA;UAAA;UAAA;UAAA;QAAA,QAAjB;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAE,CAACE,OAAD,GAAW,QAAX,GAAsB,IAAtC;MAAA,wBACG;QAAA,wBAAaN,OAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAA,uBAAYC,MAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFH,eAGG;QAAA,yBAAcC,QAAQ,CAACH,IAAvB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHH,eAIG;QAAA,uCACE;UAAA,uBAAcoB,SAAS,GAAGG,aAAa,CAACnB,OAAD,CAAhB,GAA4B,IAAnD;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,sBAAagB,SAAS,GAAGG,aAAa,CAACvB,IAAD,CAAhB,GAAyB,IAA/C;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJH,EAQIoB,SAAS,GAAGS,OAAO,CAACC,GAAR,CAAYZ,QAAZ,CAAH,GAA2B,IARxC;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAcE;MAAQ,OAAO,EAAE,MAAMU,WAAW,EAAlC;MAAA,UAAuC,CAACrB,OAAD,GAAW,WAAX,GAAyB;IAAhE;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/CM;;GAAMR,S;UAeuDD,8B;;;KAfvDC,S"},"metadata":{},"sourceType":"module"}