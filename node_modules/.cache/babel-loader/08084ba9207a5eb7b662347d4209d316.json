{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getSpeciesAsync = createAsyncThunk('displaySpecies/fetchSpecies', async payload => {\n  const response = await fetch(`https://rickandmortyapi.com/api/character/?page=${payload.page}&${payload.filter}=${payload.name}`);\n  let result = response.json();\n  return result;\n});\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    filter: '',\n    name: '',\n    users: [],\n    displaySpecies: null,\n    filteredFetchingStatus: 'idle',\n    error: null\n  },\n  reducers: {\n    // setDisplaySpecies: (state, action) => {\n    //   state.displaySpecies = action.payload\n    // },\n    // setError: (state, action) => {\n    //   state.error = action.payload\n    // },\n    setFilter: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.filter = payload.filter;\n      state.name = payload.name;\n    },\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload;\n    },\n    addUser: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      };\n      state.users.push(user);\n    },\n    likedChar: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const char = {\n        id: payload.id,\n        name: payload.name,\n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location,\n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,\n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      };\n      let user = state.users.find(usr => usr.isLogged === true);\n      let eqID = user.likedCharacters.find(chr => chr.id === payload.id);\n\n      if (!eqID) {\n        user.likedCharacters.push(char);\n      }\n    },\n    disLikedChar: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      let user = state.users.find(usr => usr.isLogged === true);\n      user.likedCharacters = user.likedCharacters.filter(char => char.id !== payload.charID);\n    },\n    logOut: (state, action) => {\n      let user = state.users.find(usr => usr.isLogged === true);\n      user.isLogged = false;\n    }\n  },\n\n  extraReducers(builder) {\n    builder.addCase(getSpeciesAsync.pending, (state, action) => {\n      state.filteredFetchingStatus = 'loading';\n    }).addCase(getSpeciesAsync.fulfilled, (state, action) => {\n      state.filteredFetchingStatus = 'succeeded';\n      state.displaySpecies = action.payload;\n    }).addCase(getSpeciesAsync.rejected, (state, action) => {\n      state.filteredFetchingStatus = 'failed';\n      state.error = action.error.message;\n    });\n  }\n\n});\nexport const {\n  flipPage,\n  addUser,\n  likedChar,\n  disLikedChar,\n  filterChar,\n  setFilter // setDisplaySpecies,\n  // setError\n\n} = rickMortySlice.actions;\nexport default rickMortySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getSpeciesAsync","payload","response","fetch","page","filter","name","result","json","rickMortySlice","initialState","users","displaySpecies","filteredFetchingStatus","error","reducers","setFilter","state","flipPage","action","addUser","user","isLogged","userName","userID","userEmail","userPicture","likedCharacters","push","likedChar","char","id","image","species","gender","location","status","episode","created","episodes","title","series","find","usr","eqID","chr","disLikedChar","charID","logOut","extraReducers","builder","addCase","pending","fulfilled","rejected","message","filterChar","actions","reducer"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty-new/src/redux/rickMortySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getSpeciesAsync = createAsyncThunk(\n  'displaySpecies/fetchSpecies', \n  async (payload) => {\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/character/?page=${payload.page}&${payload.filter}=${payload.name}`\n    )\n    let result = response.json()\n    return result\n  }\n)\n\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    filter: '',\n    name: '',\n    users: [],\n    displaySpecies: null,\n    filteredFetchingStatus: 'idle',\n    error: null\n  },\n  reducers: {\n    // setDisplaySpecies: (state, action) => {\n    //   state.displaySpecies = action.payload\n    // },\n    // setError: (state, action) => {\n    //   state.error = action.payload\n    // },\n    setFilter: (state, { payload }) => {\n      state.filter = payload.filter\n      state.name = payload.name\n    },\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload\n    },\n    addUser: (state, { payload }) => {\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      }\n      state.users.push(user)\n    },\n    likedChar: (state, { payload }) => {\n      const char = { \n        id: payload.id,\n        name: payload.name, \n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location, \n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,  \n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      }\n      let user = state.users.find(usr => usr.isLogged === true)\n      let eqID = user.likedCharacters.find(chr => chr.id === payload.id)\n      if (!eqID) {\n        user.likedCharacters.push(char)\n      }\n    \n    },\n    disLikedChar: (state, {payload}) => {\n      let user = state.users.find(usr => usr.isLogged === true)\n      user.likedCharacters = user.likedCharacters.filter(char => char.id !== payload.charID)\n    },\n    logOut: (state, action) => {\n      let user = state.users.find(usr => usr.isLogged === true)\n      user.isLogged = false\n    }\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(getSpeciesAsync.pending, (state, action) => {\n        state.filteredFetchingStatus = 'loading'\n      })\n      .addCase(getSpeciesAsync.fulfilled, (state, action) => {\n        state.filteredFetchingStatus = 'succeeded'\n        state.displaySpecies = action.payload\n      })\n      .addCase(getSpeciesAsync.rejected, (state, action) => {\n        state.filteredFetchingStatus = 'failed'\n        state.error = action.error.message\n      })\n  }\n})\n\nexport const { \n  flipPage, \n  addUser, \n  likedChar, \n  disLikedChar, \n  filterChar,\n  setFilter,\n  // setDisplaySpecies,\n  // setError\n} = rickMortySlice.actions;\n\n\nexport default rickMortySlice.reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,eAAe,GAAGD,gBAAgB,CAC7C,6BAD6C,EAE7C,MAAOE,OAAP,IAAmB;EACjB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mDAAkDF,OAAO,CAACG,IAAK,IAAGH,OAAO,CAACI,MAAO,IAAGJ,OAAO,CAACK,IAAK,EADxE,CAA5B;EAGA,IAAIC,MAAM,GAAGL,QAAQ,CAACM,IAAT,EAAb;EACA,OAAOD,MAAP;AACD,CAR4C,CAAxC;AAWP,MAAME,cAAc,GAAGX,WAAW,CAAC;EACjCQ,IAAI,EAAE,WAD2B;EAEjCI,YAAY,EAAE;IACZN,IAAI,EAAE,CADM;IAEZC,MAAM,EAAE,EAFI;IAGZC,IAAI,EAAE,EAHM;IAIZK,KAAK,EAAE,EAJK;IAKZC,cAAc,EAAE,IALJ;IAMZC,sBAAsB,EAAE,MANZ;IAOZC,KAAK,EAAE;EAPK,CAFmB;EAWjCC,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACAC,SAAS,EAAE,CAACC,KAAD,WAAwB;MAAA,IAAhB;QAAEhB;MAAF,CAAgB;MACjCgB,KAAK,CAACZ,MAAN,GAAeJ,OAAO,CAACI,MAAvB;MACAY,KAAK,CAACX,IAAN,GAAaL,OAAO,CAACK,IAArB;IACD,CAVO;IAWRY,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC3BF,KAAK,CAACb,IAAN,GAAaa,KAAK,CAACb,IAAN,IAAce,MAAM,CAAClB,OAAlC;IACD,CAbO;IAcRmB,OAAO,EAAE,CAACH,KAAD,YAAwB;MAAA,IAAhB;QAAEhB;MAAF,CAAgB;MAC/B,MAAMoB,IAAI,GAAG;QACXC,QAAQ,EAAErB,OAAO,CAACqB,QADP;QAEXhB,IAAI,EAAEL,OAAO,CAACsB,QAFH;QAGXC,MAAM,EAAEvB,OAAO,CAACuB,MAHL;QAIXC,SAAS,EAAExB,OAAO,CAACwB,SAJR;QAKXC,WAAW,EAAEzB,OAAO,CAACyB,WALV;QAMXC,eAAe,EAAE;MANN,CAAb;MAQAV,KAAK,CAACN,KAAN,CAAYiB,IAAZ,CAAiBP,IAAjB;IACD,CAxBO;IAyBRQ,SAAS,EAAE,CAACZ,KAAD,YAAwB;MAAA,IAAhB;QAAEhB;MAAF,CAAgB;MACjC,MAAM6B,IAAI,GAAG;QACXC,EAAE,EAAE9B,OAAO,CAAC8B,EADD;QAEXzB,IAAI,EAAEL,OAAO,CAACK,IAFH;QAGX0B,KAAK,EAAE/B,OAAO,CAAC+B,KAHJ;QAIXC,OAAO,EAAEhC,OAAO,CAACgC,OAJN;QAKXC,MAAM,EAAEjC,OAAO,CAACiC,MALL;QAMXC,QAAQ,EAAElC,OAAO,CAACkC,QANP;QAOXC,MAAM,EAAEnC,OAAO,CAACmC,MAPL;QAQXC,OAAO,EAAEpC,OAAO,CAACoC,OARN;QASXC,OAAO,EAAErC,OAAO,CAACqC,OATN;QAUXC,QAAQ,EAAEtC,OAAO,CAACsC,QAVP;QAWXC,KAAK,EAAEvC,OAAO,CAACuC,KAXJ;QAYXC,MAAM,EAAExC,OAAO,CAACwC;MAZL,CAAb;MAcA,IAAIpB,IAAI,GAAGJ,KAAK,CAACN,KAAN,CAAY+B,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACrB,QAAJ,KAAiB,IAAzC,CAAX;MACA,IAAIsB,IAAI,GAAGvB,IAAI,CAACM,eAAL,CAAqBe,IAArB,CAA0BG,GAAG,IAAIA,GAAG,CAACd,EAAJ,KAAW9B,OAAO,CAAC8B,EAApD,CAAX;;MACA,IAAI,CAACa,IAAL,EAAW;QACTvB,IAAI,CAACM,eAAL,CAAqBC,IAArB,CAA0BE,IAA1B;MACD;IAEF,CA9CO;IA+CRgB,YAAY,EAAE,CAAC7B,KAAD,YAAsB;MAAA,IAAd;QAAChB;MAAD,CAAc;MAClC,IAAIoB,IAAI,GAAGJ,KAAK,CAACN,KAAN,CAAY+B,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACrB,QAAJ,KAAiB,IAAzC,CAAX;MACAD,IAAI,CAACM,eAAL,GAAuBN,IAAI,CAACM,eAAL,CAAqBtB,MAArB,CAA4ByB,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY9B,OAAO,CAAC8C,MAAxD,CAAvB;IACD,CAlDO;IAmDRC,MAAM,EAAE,CAAC/B,KAAD,EAAQE,MAAR,KAAmB;MACzB,IAAIE,IAAI,GAAGJ,KAAK,CAACN,KAAN,CAAY+B,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACrB,QAAJ,KAAiB,IAAzC,CAAX;MACAD,IAAI,CAACC,QAAL,GAAgB,KAAhB;IACD;EAtDO,CAXuB;;EAmEjC2B,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWnD,eAAe,CAACoD,OAD3B,EACoC,CAACnC,KAAD,EAAQE,MAAR,KAAmB;MACnDF,KAAK,CAACJ,sBAAN,GAA+B,SAA/B;IACD,CAHH,EAIGsC,OAJH,CAIWnD,eAAe,CAACqD,SAJ3B,EAIsC,CAACpC,KAAD,EAAQE,MAAR,KAAmB;MACrDF,KAAK,CAACJ,sBAAN,GAA+B,WAA/B;MACAI,KAAK,CAACL,cAAN,GAAuBO,MAAM,CAAClB,OAA9B;IACD,CAPH,EAQGkD,OARH,CAQWnD,eAAe,CAACsD,QAR3B,EAQqC,CAACrC,KAAD,EAAQE,MAAR,KAAmB;MACpDF,KAAK,CAACJ,sBAAN,GAA+B,QAA/B;MACAI,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACL,KAAP,CAAayC,OAA3B;IACD,CAXH;EAYD;;AAhFgC,CAAD,CAAlC;AAmFA,OAAO,MAAM;EACXrC,QADW;EAEXE,OAFW;EAGXS,SAHW;EAIXiB,YAJW;EAKXU,UALW;EAMXxC,SANW,CAOX;EACA;;AARW,IASTP,cAAc,CAACgD,OATZ;AAYP,eAAehD,cAAc,CAACiD,OAA9B"},"metadata":{},"sourceType":"module"}