{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/rick-morty-new/src/components/CharacterList/FilterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useGetAllNamesQuery } from \"../../redux/rickMortyApi\";\nimport { setFilter } from \"../../redux/rickMortySlice\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterForm = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const {\n    data,\n    isSuccess\n  } = useGetAllNamesQuery();\n\n  const clearDuplicates = array => {\n    let sorted = new Set(array);\n    const sortedArr = [];\n\n    for (let value of sorted) sortedArr.push(value);\n\n    return sortedArr;\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    // console.log(data[filter], filter)\n    dispatch(setFilter({\n      filter,\n      name: data[filter]\n    }));\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"input-group input-group-sm my-4\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      ...register(filter),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        label: \"select species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), isSuccess ? clearDuplicates(data.map(item => item[filter])).map((item, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        label: item,\n        children: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      type: \"submit\",\n      children: filter[0].toUpperCase() + filter.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterForm, \"w1GUYcs2MI3yQK0dDhGifxt9BO8=\", false, function () {\n  return [useGetAllNamesQuery, useForm];\n});\n\n_c = FilterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterForm\");","map":{"version":3,"names":["useGetAllNamesQuery","setFilter","useForm","FilterForm","filter","data","isSuccess","clearDuplicates","array","sorted","Set","sortedArr","value","push","register","handleSubmit","reset","onSubmit","dispatch","name","map","item","i","toUpperCase","slice"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty-new/src/components/CharacterList/FilterForm.js"],"sourcesContent":["import { useGetAllNamesQuery } from \"../../redux/rickMortyApi\"\nimport { setFilter } from \"../../redux/rickMortySlice\"\nimport { useForm } from \"react-hook-form\"\n\nexport const FilterForm = ({ filter }) => {\n\n  const { data, isSuccess } = useGetAllNamesQuery()\n\n  const clearDuplicates = (array) => {\n    let sorted = new Set(array)\n    const sortedArr = []\n    for (let value of sorted) sortedArr.push(value)\n    return sortedArr\n  }\n\n  const {\n    register, \n    handleSubmit,\n    reset\n  } = useForm()\n\n  const onSubmit = (data) => {\n    // console.log(data[filter], filter)\n    dispatch(setFilter({ filter, name: data[filter] }))\n    reset()\n  }\n\n\n  return (\n    <form className=\"input-group input-group-sm my-4\" onSubmit={handleSubmit(onSubmit)}>\n      <select className=\"form-control\" {...register(filter)} >\n        <option label='select species'></option>\n        {\n          isSuccess ?\n          clearDuplicates(data.map(item => item[filter]))\n            .map((item, i) => \n              <option key={i} label={item}>{item}</option>\n            ) :\n            null\n        }\n      </select>\n      <button\n        className=\"btn\" \n        type='submit'\n      >\n        {filter[0].toUpperCase() + filter.slice(1)}\n      </button>\n    </form>\n  )\n}"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAExC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAsBN,mBAAmB,EAA/C;;EAEA,MAAMO,eAAe,GAAIC,KAAD,IAAW;IACjC,IAAIC,MAAM,GAAG,IAAIC,GAAJ,CAAQF,KAAR,CAAb;IACA,MAAMG,SAAS,GAAG,EAAlB;;IACA,KAAK,IAAIC,KAAT,IAAkBH,MAAlB,EAA0BE,SAAS,CAACE,IAAV,CAAeD,KAAf;;IAC1B,OAAOD,SAAP;EACD,CALD;;EAOA,MAAM;IACJG,QADI;IAEJC,YAFI;IAGJC;EAHI,IAIFd,OAAO,EAJX;;EAMA,MAAMe,QAAQ,GAAIZ,IAAD,IAAU;IACzB;IACAa,QAAQ,CAACjB,SAAS,CAAC;MAAEG,MAAF;MAAUe,IAAI,EAAEd,IAAI,CAACD,MAAD;IAApB,CAAD,CAAV,CAAR;IACAY,KAAK;EACN,CAJD;;EAOA,oBACE;IAAM,SAAS,EAAC,iCAAhB;IAAkD,QAAQ,EAAED,YAAY,CAACE,QAAD,CAAxE;IAAA,wBACE;MAAQ,SAAS,EAAC,cAAlB;MAAA,GAAqCH,QAAQ,CAACV,MAAD,CAA7C;MAAA,wBACE;QAAQ,KAAK,EAAC;MAAd;QAAA;QAAA;QAAA;MAAA,QADF,EAGIE,SAAS,GACTC,eAAe,CAACF,IAAI,CAACe,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACjB,MAAD,CAArB,CAAD,CAAf,CACGgB,GADH,CACO,CAACC,IAAD,EAAOC,CAAP,kBACH;QAAgB,KAAK,EAAED,IAAvB;QAAA,UAA8BA;MAA9B,GAAaC,CAAb;QAAA;QAAA;QAAA;MAAA,QAFJ,CADS,GAKP,IARN;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MACE,SAAS,EAAC,KADZ;MAEE,IAAI,EAAC,QAFP;MAAA,UAIGlB,MAAM,CAAC,CAAD,CAAN,CAAUmB,WAAV,KAA0BnB,MAAM,CAACoB,KAAP,CAAa,CAAb;IAJ7B;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA7CM;;GAAMrB,U;UAEiBH,mB,EAaxBE,O;;;KAfOC,U"},"metadata":{},"sourceType":"module"}