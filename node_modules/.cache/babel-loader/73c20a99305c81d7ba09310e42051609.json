{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    users: []\n  },\n  reducers: {\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload;\n    },\n    addUser: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      };\n      state.users.push(user);\n    },\n    likedChar: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const char = {\n        id: payload.id,\n        name: payload.name,\n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location,\n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,\n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      };\n      let user = state.users.find(usr => usr.isLogged === true);\n\n      if (user.likedCharacters.includes(char)) {\n        console.log(\"don't push me\");\n      } else {\n        user.likedCharacters.push(char);\n      }\n    },\n    disLikedChar: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      let user = payload.user;\n      user.likedCharacters.filter(char => char.id !== payload.charID);\n      console.log(payload);\n    }\n  }\n});\nexport const {\n  flipPage,\n  addUser,\n  likedChar,\n  disLikedChar\n} = rickMortySlice.actions;\nexport default rickMortySlice.reducer;","map":{"version":3,"names":["createSlice","rickMortySlice","name","initialState","page","users","reducers","flipPage","state","action","payload","addUser","user","isLogged","userName","userID","userEmail","userPicture","likedCharacters","push","likedChar","char","id","image","species","gender","location","status","episode","created","episodes","title","series","find","usr","includes","console","log","disLikedChar","filter","charID","actions","reducer"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty/src/redux/rickMortySlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    users: []\n  },\n  reducers: {\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload\n    },\n    addUser: (state, { payload }) => {\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      }\n      state.users.push(user)\n    },\n    likedChar: (state, { payload }) => {\n      const char = { \n        id: payload.id,\n        name: payload.name, \n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location, \n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,  \n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      }\n      let user = state.users.find(usr => usr.isLogged === true)\n      if (user.likedCharacters.includes(char)) {\n        console.log(\"don't push me\")\n      } else {\n        user.likedCharacters.push(char)\n      }\n    },\n    disLikedChar: (state, {payload}) => {\n      let user = payload.user\n      user.likedCharacters.filter(char => char.id !== payload.charID)\n      console.log(payload)\n    }\n  }\n})\n\nexport const { flipPage, addUser, likedChar, disLikedChar } = rickMortySlice.actions;\n\nexport default rickMortySlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,WAD2B;EAEjCC,YAAY,EAAE;IACZC,IAAI,EAAE,CADM;IAEZC,KAAK,EAAE;EAFK,CAFmB;EAMjCC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACJ,IAAN,GAAaI,KAAK,CAACJ,IAAN,IAAcK,MAAM,CAACC,OAAlC;IACD,CAHO;IAIRC,OAAO,EAAE,CAACH,KAAD,WAAwB;MAAA,IAAhB;QAAEE;MAAF,CAAgB;MAC/B,MAAME,IAAI,GAAG;QACXC,QAAQ,EAAEH,OAAO,CAACG,QADP;QAEXX,IAAI,EAAEQ,OAAO,CAACI,QAFH;QAGXC,MAAM,EAAEL,OAAO,CAACK,MAHL;QAIXC,SAAS,EAAEN,OAAO,CAACM,SAJR;QAKXC,WAAW,EAAEP,OAAO,CAACO,WALV;QAMXC,eAAe,EAAE;MANN,CAAb;MAQAV,KAAK,CAACH,KAAN,CAAYc,IAAZ,CAAiBP,IAAjB;IACD,CAdO;IAeRQ,SAAS,EAAE,CAACZ,KAAD,YAAwB;MAAA,IAAhB;QAAEE;MAAF,CAAgB;MACjC,MAAMW,IAAI,GAAG;QACXC,EAAE,EAAEZ,OAAO,CAACY,EADD;QAEXpB,IAAI,EAAEQ,OAAO,CAACR,IAFH;QAGXqB,KAAK,EAAEb,OAAO,CAACa,KAHJ;QAIXC,OAAO,EAAEd,OAAO,CAACc,OAJN;QAKXC,MAAM,EAAEf,OAAO,CAACe,MALL;QAMXC,QAAQ,EAAEhB,OAAO,CAACgB,QANP;QAOXC,MAAM,EAAEjB,OAAO,CAACiB,MAPL;QAQXC,OAAO,EAAElB,OAAO,CAACkB,OARN;QASXC,OAAO,EAAEnB,OAAO,CAACmB,OATN;QAUXC,QAAQ,EAAEpB,OAAO,CAACoB,QAVP;QAWXC,KAAK,EAAErB,OAAO,CAACqB,KAXJ;QAYXC,MAAM,EAAEtB,OAAO,CAACsB;MAZL,CAAb;MAcA,IAAIpB,IAAI,GAAGJ,KAAK,CAACH,KAAN,CAAY4B,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACrB,QAAJ,KAAiB,IAAzC,CAAX;;MACA,IAAID,IAAI,CAACM,eAAL,CAAqBiB,QAArB,CAA8Bd,IAA9B,CAAJ,EAAyC;QACvCe,OAAO,CAACC,GAAR,CAAY,eAAZ;MACD,CAFD,MAEO;QACLzB,IAAI,CAACM,eAAL,CAAqBC,IAArB,CAA0BE,IAA1B;MACD;IACF,CApCO;IAqCRiB,YAAY,EAAE,CAAC9B,KAAD,YAAsB;MAAA,IAAd;QAACE;MAAD,CAAc;MAClC,IAAIE,IAAI,GAAGF,OAAO,CAACE,IAAnB;MACAA,IAAI,CAACM,eAAL,CAAqBqB,MAArB,CAA4BlB,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAAC8B,MAAxD;MACAJ,OAAO,CAACC,GAAR,CAAY3B,OAAZ;IACD;EAzCO;AANuB,CAAD,CAAlC;AAmDA,OAAO,MAAM;EAAEH,QAAF;EAAYI,OAAZ;EAAqBS,SAArB;EAAgCkB;AAAhC,IAAiDrC,cAAc,CAACwC,OAAtE;AAEP,eAAexC,cAAc,CAACyC,OAA9B"},"metadata":{},"sourceType":"module"}