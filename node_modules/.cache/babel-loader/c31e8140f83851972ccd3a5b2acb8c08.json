{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/rick-morty-new/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\nimport { getAllEpisodesAsync, setSearchFormEpisode, setWatchList } from '../redux/rickMortySlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WatchList = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [savedEpisodes, setSavedEpisodes] = useState([]);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllEpisodesAsync());\n  }, [dispatch]);\n  const {\n    displayAllEpisodes,\n    allEpisodesStatus,\n    allEpisodesError,\n    searchFormEpisode,\n    watchlist\n  } = useSelector(state => state.rickMorty);\n  useEffect(() => {\n    if (localStorage.length) for (let i = 0; i < localStorage.length; i++) {\n      let obj = JSON.parse(localStorage.getItem(localStorage.key(i)));\n      setSavedEpisodes(prev => [...prev, obj]);\n    }\n  }, []); // useEffect(() => {\n  //   localStorage.setItem('watchlist', JSON.stringify(savedEpisodes))\n  // }, [savedEpisodes, localStorage.setItem])\n  // const getEpisodeByName = async () => {\n  //   try {\n  //     // const response = await fetch(\n  //     //   `https://rickandmortyapi.com/api/episode/?name=${searchFormEpisode}`\n  //     // )\n  //     // let result = await response.json()\n  //     // setSavedEpisodes(prev => [...prev, result])\n  //     const foundEpisode = displayAllEpisodes.find(ep => ep.name === searchFormEpisode)\n  //   } catch (err) {\n  //     setError(err.message)\n  //   }\n  // }\n  // useEffect(() => {\n  //   getEpisodeByName()\n  // }, [searchFormEpisode])\n\n  const onSubmit = value => {\n    dispatch(setSearchFormEpisode(value.episode));\n    const foundEpisode = displayAllEpisodes.find(ep => ep.name === value.episode);\n\n    if (!JSON.parse(localStorage.getItem(value.episode))) {\n      localStorage.setItem(value.episode, JSON.stringify(foundEpisode));\n    }\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5 custom-width\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"h3 text-center my-4\",\n      children: \"My Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), console.log(savedEpisodes), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-group input-group-sm my-4\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        list: \"datalistOptions\",\n        id: \"exampleDataList\",\n        ...register('episode'),\n        \"aria-label\": \"Text input with dropdown button\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        className: \"datalist\",\n        id: \"datalistOptions\",\n        children: allEpisodesStatus === 'loading' ? /*#__PURE__*/_jsxDEV(\"option\", {\n          label: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : allEpisodesStatus === 'succeeded' && displayAllEpisodes ? displayAllEpisodes.map(ep => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ep.name\n        }, ep.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)) : allEpisodesStatus === 'failed' && allEpisodesError ? /*#__PURE__*/_jsxDEV(\"option\", {\n          label: \"error\",\n          children: [\"Oops, \", allEpisodesError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"button\",\n        onClick: handleSubmit(onSubmit),\n        children: \"Start/Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WatchList, \"vB2O47C6j6vOuZp8+g7vViLPS8Y=\", false, function () {\n  return [useForm, useDispatch, useSelector];\n});\n\n_c = WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"names":["useForm","useEffect","useState","getAllEpisodesAsync","setSearchFormEpisode","setWatchList","useSelector","useDispatch","WatchList","register","handleSubmit","reset","savedEpisodes","setSavedEpisodes","error","setError","dispatch","displayAllEpisodes","allEpisodesStatus","allEpisodesError","searchFormEpisode","watchlist","state","rickMorty","localStorage","length","i","obj","JSON","parse","getItem","key","prev","onSubmit","value","episode","foundEpisode","find","ep","name","setItem","stringify","console","log","map","id"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty-new/src/components/WatchList.js"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\nimport { getAllEpisodesAsync, setSearchFormEpisode, setWatchList } from '../redux/rickMortySlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const WatchList = () => {\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const [ savedEpisodes, setSavedEpisodes ] = useState([])\n  const [ error, setError ] = useState(null)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllEpisodesAsync())\n  }, [dispatch])\n\n\n  const {\n    displayAllEpisodes,\n    allEpisodesStatus,\n    allEpisodesError, \n    searchFormEpisode,\n    watchlist\n  } = useSelector(state => state.rickMorty)\n\n  useEffect(() => {\n    if (localStorage.length)\n    for (let i = 0; i < localStorage.length; i++) {\n      let obj = JSON.parse(localStorage.getItem(localStorage.key(i)))\n      setSavedEpisodes(prev => [...prev, obj])\n    }\n  }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem('watchlist', JSON.stringify(savedEpisodes))\n  // }, [savedEpisodes, localStorage.setItem])\n\n  // const getEpisodeByName = async () => {\n  //   try {\n  //     // const response = await fetch(\n  //     //   `https://rickandmortyapi.com/api/episode/?name=${searchFormEpisode}`\n  //     // )\n  //     // let result = await response.json()\n  //     // setSavedEpisodes(prev => [...prev, result])\n  //     const foundEpisode = displayAllEpisodes.find(ep => ep.name === searchFormEpisode)\n  //   } catch (err) {\n  //     setError(err.message)\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   getEpisodeByName()\n  // }, [searchFormEpisode])\n\n\n\n  const onSubmit = (value) => {\n    dispatch(setSearchFormEpisode(value.episode))\n    const foundEpisode = displayAllEpisodes.find(ep => ep.name === value.episode)\n    if (!JSON.parse(localStorage.getItem(value.episode))) {\n      localStorage.setItem(value.episode, JSON.stringify(foundEpisode))\n    }\n    reset();\n  }\n\n\n  return (\n    <div className='container-fluid mt-5 custom-width'>\n      <h3 className='h3 text-center my-4'>My Watchlist</h3>\n      {console.log(savedEpisodes)}\n      {/* {console.log(displayAllEpisodes)} */}\n      {/* {\n        searchFormEpisode === '' ?\n        <p className=\"my-3\">Enter name...</p> :\n        allEpisodesStatus === 'loading' ?\n        <p className=\"my-3\">Loading...</p> :\n        speciesStatus === 'succeeded' && displaySpecies.results ?\n        <p className=\"my-3\">Look what I found:</p> :\n        speciesStatus === 'succeeded' && displaySpecies.error ?\n        <p className=\"my-3\">Ops, {displaySpecies.error.toLowerCase()}!</p> :\n        speciesStatus === 'rejected' && speciesError ?\n        <p className=\"my-3\">Ops, {speciesError.toLowerCase()}!</p> :\n        null\n      } */}\n\n      <form className='input-group input-group-sm my-4' onSubmit={handleSubmit(onSubmit)}>\n        <input \n          className=\"form-control\" \n          list=\"datalistOptions\" \n          id=\"exampleDataList\" \n          {...register('episode')} \n          aria-label=\"Text input with dropdown button\" \n          autoComplete=\"off\" \n        />\n        <datalist className='datalist' id=\"datalistOptions\">\n          \n          { \n            allEpisodesStatus === 'loading' ?\n            <option label='loading'>Loading...</option> :\n            allEpisodesStatus === 'succeeded' && displayAllEpisodes ?\n            displayAllEpisodes.map(ep => \n              <option key={ep.id} value={ep.name} />\n            ) :\n            allEpisodesStatus === 'failed' && allEpisodesError ?\n            <option label='error'>Oops, {allEpisodesError}</option> :\n            null\n          }\n          \n        </datalist>\n        <button className=\"btn\" type=\"button\" onClick={handleSubmit(onSubmit)}>Start/Reset</button>\n      </form>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}