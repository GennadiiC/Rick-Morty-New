{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/rick-morty/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useGetEpisodeForCharacterQuery } from \"../redux/rickMortyApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Character = _ref => {\n  _s();\n\n  let {\n    name,\n    species,\n    gender,\n    location,\n    episode,\n    status,\n    created\n  } = _ref;\n  const [clicked, setClicked] = useState(false);\n  let idsArr = episode.map(ep => Number(ep.slice(-2).replace('/', '')));\n  let ids = idsArr.join(',');\n  const {\n    data: episodes,\n    isFetching,\n    isSuccess,\n    isError,\n    error\n  } = useGetEpisodeForCharacterQuery(ids); // function episodeString (value) {\n  //   if (Array.isArray(episodes)) {\n  //     if (value = 'name') {\n  //       return episodes.map(ep => ep.name).join(', ')\n  //     } else if (value = 'episode') {\n  //       return episodes.map(ep => ep.episode).join(', ')\n  //     }\n  //     //  value = 'name' ? episodes.map(ep => ep.name).join(', ') :\n  //     //        value = 'episode' ? episodes.map(ep => ep.episode).join(', ') :\n  //     //        null\n  //   } else {\n  //     if (value = 'name') {\n  //       return episodes.name\n  //     } else if (value = 'episode') {\n  //       return episodes.episode\n  //     }\n  //     //  value = 'name' ? episodes.name :\n  //     //        value = 'episode' ? episodes.episode :\n  //     //        null\n  //   }\n  // }\n\n  function episodeString(value) {\n    if (value = 'name' && Array.isArray(episodes)) {\n      return episodes.map(ep => ep.name).join(', ');\n    } else if (value === 'name') {\n      return episodes.name;\n    } else if (value === 'episode' && Array.isArray(episodes)) {\n      return episodes.map(ep => ep.episode).join(', ');\n    } else if (value === 'episode') {\n      return episodes.episode;\n    }\n  }\n\n  const classToggle = () => {\n    setClicked(!clicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", name, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !clicked ? \"d-none\" : null,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Species: \", species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Episode(s):\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"series: \", isSuccess ? episodeString('episode') : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"title: \", isSuccess ? episodeString('name') : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), isSuccess ? console.log(episodes) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classToggle(),\n      children: !clicked ? 'Show Info' : 'Hide Info'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Character, \"CzlfxpuJwFSITrfTlIR5VPahc7M=\", false, function () {\n  return [useGetEpisodeForCharacterQuery];\n});\n\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["useState","useGetEpisodeForCharacterQuery","Character","name","species","gender","location","episode","status","created","clicked","setClicked","idsArr","map","ep","Number","slice","replace","ids","join","data","episodes","isFetching","isSuccess","isError","error","episodeString","value","Array","isArray","classToggle","console","log"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty/src/components/Character.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useGetEpisodeForCharacterQuery } from \"../redux/rickMortyApi\";\n\nexport const Character = ({ \n  name, \n  species, \n  gender,  \n  location,\n  episode, \n  status,\n  created\n}) => {\n\n  const [ clicked, setClicked ] = useState(false)\n\n  let idsArr = episode.map(ep => Number(ep.slice(-2).replace('/', '')))\n  let ids = idsArr.join(',')\n\n  const { data: episodes, isFetching, isSuccess, isError, error } = useGetEpisodeForCharacterQuery(ids)\n\n\n  // function episodeString (value) {\n  //   if (Array.isArray(episodes)) {\n  //     if (value = 'name') {\n  //       return episodes.map(ep => ep.name).join(', ')\n  //     } else if (value = 'episode') {\n  //       return episodes.map(ep => ep.episode).join(', ')\n  //     }\n  //     //  value = 'name' ? episodes.map(ep => ep.name).join(', ') :\n  //     //        value = 'episode' ? episodes.map(ep => ep.episode).join(', ') :\n  //     //        null\n  //   } else {\n  //     if (value = 'name') {\n  //       return episodes.name\n  //     } else if (value = 'episode') {\n  //       return episodes.episode\n  //     }\n  //     //  value = 'name' ? episodes.name :\n  //     //        value = 'episode' ? episodes.episode :\n  //     //        null\n  //   }\n  // }\n\n  function episodeString (value) {\n    if (value = 'name' && Array.isArray(episodes)) {\n      return episodes.map(ep => ep.name).join(', ') \n    } else if (value === 'name') {\n      return episodes.name\n    } else if (value === 'episode' && Array.isArray(episodes)) {\n      return episodes.map(ep => ep.episode).join(', ')\n    } else if (value === 'episode') {\n      return episodes.episode\n    }\n  }\n\n  const classToggle = () => {\n    setClicked(!clicked)\n  }\n\n  return ( \n    <div>\n      <div>\n        <p>Name: {name}, <span>Status: {status}</span></p>  \n      </div>\n      <div className={!clicked ? \"d-none\" : null}>\n         <p>Species: {species}</p>\n         <p>Gender: {gender}</p>\n         <p>Location: {location.name}</p>\n         <div>Episode(s):\n           <div>series: {isSuccess ? episodeString('episode') : null}</div>\n           <div>title: {isSuccess ? episodeString('name') : null}</div>\n         </div>\n         {isSuccess ? console.log(episodes) : null}\n      </div>\n      <button onClick={() => classToggle()}>{!clicked ? 'Show Info' : 'Hide Info'}</button>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}