{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/rick-morty/src/components/Facebook.js\",\n    _s = $RefreshSig$();\n\nimport ReactFacebookLogin from \"react-facebook-login\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../redux/rickMortySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Facebook = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => state.rickMorty); // const [ isLoggedIn, setIsLoggedIn ] = useState(false)\n  // const [ userID, setUserID ] = useState('')\n  // const [ userName, setUserName ] = useState('')\n  // const [ userEmail, setUserEmail ] = useState('')\n  // const [ userPicture, setUserPicture ] = useState('')\n\n  const [state, setState] = useState({\n    login: false,\n    id: '',\n    name: '',\n    picture: ''\n  }); // const findUser = users.find(user => user.id )\n\n  const componentClicked = () => {\n    console.log('clicked');\n  };\n\n  const responseFacebook = response => {\n    // setIsLoggedIn(!isLoggedIn)\n    // setUserID(response.userID)\n    // setUserName(response.name)\n    // setUserEmail(response.email)\n    // setUserPicture(response.picture.data.url)\n    dispatch(addUser({\n      userName: response.name,\n      userID: response.userID,\n      userEmail: response.email,\n      userPicture: response.picture.data.url\n    }));\n    setState(prev => ({ ...prev,\n      login: true,\n      id: response.userID,\n      name: response.name,\n      picture: response.picture.data.url\n    }));\n  };\n\n  const user = users.find(usr => usr.id === state.id);\n  let fbContent;\n\n  if (state.login) {\n    fbContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: state.picture,\n        alt: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Welcome, \", state.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  } else {\n    fbContent = /*#__PURE__*/_jsxDEV(ReactFacebookLogin, {\n      size: \"small\",\n      appId: \"590001315795132\",\n      autoLoad: true,\n      fields: \"name,email,picture\",\n      onClick: componentClicked,\n      callback: responseFacebook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fbContent, console.log(user)]\n  }, void 0, true);\n};\n\n_s(Facebook, \"mhv/uhs7sx9zE2UqTvNxDBclCeo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Facebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Facebook\");","map":{"version":3,"names":["ReactFacebookLogin","useState","useDispatch","useSelector","addUser","Facebook","dispatch","users","state","rickMorty","setState","login","id","name","picture","componentClicked","console","log","responseFacebook","response","userName","userID","userEmail","email","userPicture","data","url","prev","user","find","usr","fbContent"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty/src/components/Facebook.js"],"sourcesContent":["import ReactFacebookLogin from \"react-facebook-login\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../redux/rickMortySlice\";\n\nexport const Facebook = () => {\n\n  const dispatch = useDispatch()\n  const { users } = useSelector((state) => state.rickMorty)\n\n\n  // const [ isLoggedIn, setIsLoggedIn ] = useState(false)\n  // const [ userID, setUserID ] = useState('')\n  // const [ userName, setUserName ] = useState('')\n  // const [ userEmail, setUserEmail ] = useState('')\n  // const [ userPicture, setUserPicture ] = useState('')\n\n  const [ state, setState ] = useState({\n    login: false,\n    id: '',\n    name : '',\n    picture: ''\n  })\n\n  // const findUser = users.find(user => user.id )\n\n  const componentClicked = () => {\n    console.log('clicked')\n  }\n\n  const responseFacebook = (response) => {\n    // setIsLoggedIn(!isLoggedIn)\n    // setUserID(response.userID)\n    // setUserName(response.name)\n    // setUserEmail(response.email)\n    // setUserPicture(response.picture.data.url)\n\n    dispatch(addUser({ \n      userName: response.name, \n      userID: response.userID, \n      userEmail: response.email, \n      userPicture: response.picture.data.url\n    }))\n\n    setState(prev => (\n      {\n        ...prev, \n        login: true,\n        id: response.userID,\n        name: response.name,\n        picture: response.picture.data.url\n      }\n    ))\n  }\n\n  const user = users.find(usr => usr.id === state.id)\n\n  let fbContent;\n\n  if (state.login) {\n    fbContent = (\n      <div>\n        <img src={state.picture} alt={state.name} />\n        <h6>Welcome, {state.name}</h6>\n      </div>\n    )\n  } else {\n    fbContent = (\n      <ReactFacebookLogin\n        size='small'\n        appId=\"590001315795132\"\n        autoLoad={true}\n        fields=\"name,email,picture\"\n        onClick={componentClicked}\n        callback={responseFacebook} \n      />\n    )\n  }\n\n  return (\n    <>\n      {fbContent}\n      {console.log(user)}\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAE5B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM;IAAEK;EAAF,IAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAA7B,CAH4B,CAM5B;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAAED,KAAF,EAASE,QAAT,IAAsBT,QAAQ,CAAC;IACnCU,KAAK,EAAE,KAD4B;IAEnCC,EAAE,EAAE,EAF+B;IAGnCC,IAAI,EAAG,EAH4B;IAInCC,OAAO,EAAE;EAJ0B,CAAD,CAApC,CAZ4B,CAmB5B;;EAEA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BC,OAAO,CAACC,GAAR,CAAY,SAAZ;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;IACrC;IACA;IACA;IACA;IACA;IAEAb,QAAQ,CAACF,OAAO,CAAC;MACfgB,QAAQ,EAAED,QAAQ,CAACN,IADJ;MAEfQ,MAAM,EAAEF,QAAQ,CAACE,MAFF;MAGfC,SAAS,EAAEH,QAAQ,CAACI,KAHL;MAIfC,WAAW,EAAEL,QAAQ,CAACL,OAAT,CAAiBW,IAAjB,CAAsBC;IAJpB,CAAD,CAAR,CAAR;IAOAhB,QAAQ,CAACiB,IAAI,KACX,EACE,GAAGA,IADL;MAEEhB,KAAK,EAAE,IAFT;MAGEC,EAAE,EAAEO,QAAQ,CAACE,MAHf;MAIER,IAAI,EAAEM,QAAQ,CAACN,IAJjB;MAKEC,OAAO,EAAEK,QAAQ,CAACL,OAAT,CAAiBW,IAAjB,CAAsBC;IALjC,CADW,CAAL,CAAR;EASD,CAvBD;;EAyBA,MAAME,IAAI,GAAGrB,KAAK,CAACsB,IAAN,CAAWC,GAAG,IAAIA,GAAG,CAAClB,EAAJ,KAAWJ,KAAK,CAACI,EAAnC,CAAb;EAEA,IAAImB,SAAJ;;EAEA,IAAIvB,KAAK,CAACG,KAAV,EAAiB;IACfoB,SAAS,gBACP;MAAA,wBACE;QAAK,GAAG,EAAEvB,KAAK,CAACM,OAAhB;QAAyB,GAAG,EAAEN,KAAK,CAACK;MAApC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBAAcL,KAAK,CAACK,IAApB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CAPD,MAOO;IACLkB,SAAS,gBACP,QAAC,kBAAD;MACE,IAAI,EAAC,OADP;MAEE,KAAK,EAAC,iBAFR;MAGE,QAAQ,EAAE,IAHZ;MAIE,MAAM,EAAC,oBAJT;MAKE,OAAO,EAAEhB,gBALX;MAME,QAAQ,EAAEG;IANZ;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;EAED,oBACE;IAAA,WACGa,SADH,EAEGf,OAAO,CAACC,GAAR,CAAYW,IAAZ,CAFH;EAAA,gBADF;AAMD,CAhFM;;GAAMvB,Q;UAEMH,W,EACCC,W;;;KAHPE,Q"},"metadata":{},"sourceType":"module"}