{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getSpeciesAsync = createAsyncThunk('displaySpecies/fetchSpecies', async payload => {\n  const response = await fetch(`https://rickandmortyapi.com/api/character/?page=${payload.page}&${payload.filter}=${payload.name}`);\n  let result = response.json();\n  return result;\n});\nexport const getAllAsync = createAsyncThunk('displayAll/fetchAll', async payload => {\n  const pages = new Array(payload.count).fill().map((p, i) => p = i + 1);\n  const results = await Promise.all(pages.map(page => fetch(`https://rickandmortyapi.com/api/${payload.query}?page=${page}`).then(data => data.json())));\n  let mapped = results.map(res => res.results).flat();\n  return {\n    result: mapped,\n    query: payload.query\n  };\n});\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    filter: '',\n    name: '',\n    users: [],\n    displaySpecies: null,\n    displayAllEpisodes: null,\n    displayAllCharacters: null,\n    filteredFetchingStatus: 'idle',\n    error: null\n  },\n  reducers: {\n    setFilter: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.filter = payload.filter;\n      state.name = payload.name;\n    },\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload;\n    },\n    addUser: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      };\n      state.users.push(user);\n    },\n    likedChar: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const char = {\n        id: payload.id,\n        name: payload.name,\n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location,\n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,\n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      };\n      let user = state.users.find(usr => usr.isLogged === true);\n      let eqID = user.likedCharacters.find(chr => chr.id === payload.id);\n\n      if (!eqID) {\n        user.likedCharacters.push(char);\n      }\n    },\n    disLikedChar: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      let user = state.users.find(usr => usr.isLogged === true);\n      user.likedCharacters = user.likedCharacters.filter(char => char.id !== payload.charID);\n    },\n    logOut: (state, action) => {\n      let user = state.users.find(usr => usr.isLogged === true);\n      user.isLogged = false;\n    }\n  },\n\n  extraReducers(builder) {\n    builder // getSpeciesAsync cases\n    .addCase(getSpeciesAsync.pending, (state, action) => {\n      state.filteredFetchingStatus = 'loading';\n    }).addCase(getSpeciesAsync.fulfilled, (state, action) => {\n      state.filteredFetchingStatus = 'succeeded';\n      state.displaySpecies = action.payload;\n    }).addCase(getSpeciesAsync.rejected, (state, action) => {\n      state.filteredFetchingStatus = 'failed';\n      state.error = action.error.message;\n    }) // getAllEpisodes cases\n    .addCase(getAllAsync.fulfilled, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n\n      if (payload.query === 'episode') {\n        state.displayAllEpisodes = payload.result;\n      } else if (payload.query === 'character') {\n        state.displayAllCharacters = payload.result;\n      }\n    });\n  }\n\n});\nexport const {\n  flipPage,\n  addUser,\n  likedChar,\n  disLikedChar,\n  filterChar,\n  setFilter\n} = rickMortySlice.actions;\nexport default rickMortySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getSpeciesAsync","payload","response","fetch","page","filter","name","result","json","getAllAsync","pages","Array","count","fill","map","p","i","results","Promise","all","query","then","data","mapped","res","flat","rickMortySlice","initialState","users","displaySpecies","displayAllEpisodes","displayAllCharacters","filteredFetchingStatus","error","reducers","setFilter","state","flipPage","action","addUser","user","isLogged","userName","userID","userEmail","userPicture","likedCharacters","push","likedChar","char","id","image","species","gender","location","status","episode","created","episodes","title","series","find","usr","eqID","chr","disLikedChar","charID","logOut","extraReducers","builder","addCase","pending","fulfilled","rejected","message","filterChar","actions","reducer"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty-new/src/redux/rickMortySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getSpeciesAsync = createAsyncThunk(\n  'displaySpecies/fetchSpecies', \n  async (payload) => {\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/character/?page=${payload.page}&${payload.filter}=${payload.name}`\n    )\n    let result = response.json()\n    return result\n  }\n)\n\nexport const getAllAsync = createAsyncThunk(\n  'displayAll/fetchAll',\n  async (payload) => {\n    const pages = new Array(payload.count)\n      .fill()\n      .map((p, i) => p = i + 1)\n    const results = await Promise.all(\n      pages.map(page => \n        fetch(`https://rickandmortyapi.com/api/${payload.query}?page=${page}`)\n          .then(data => data.json())\n      )\n    )\n    let mapped = results.map(res => res.results).flat()\n    return { result: mapped, query: payload.query }\n  } \n)\n\n\n\nconst rickMortySlice = createSlice({\n  name: 'rickMorty',\n  initialState: {\n    page: 1,\n    filter: '',\n    name: '',\n    users: [],\n    displaySpecies: null,\n    displayAllEpisodes: null,\n    displayAllCharacters: null,\n    filteredFetchingStatus: 'idle',\n    error: null\n  },\n  reducers: {\n    setFilter: (state, { payload }) => {\n      state.filter = payload.filter\n      state.name = payload.name\n    },\n    flipPage: (state, action) => {\n      state.page = state.page += action.payload\n    },\n    addUser: (state, { payload }) => {\n      const user = {\n        isLogged: payload.isLogged,\n        name: payload.userName,\n        userID: payload.userID,\n        userEmail: payload.userEmail,\n        userPicture: payload.userPicture,\n        likedCharacters: []\n      }\n      state.users.push(user)\n    },\n    likedChar: (state, { payload }) => {\n      const char = { \n        id: payload.id,\n        name: payload.name, \n        image: payload.image,\n        species: payload.species,\n        gender: payload.gender,\n        location: payload.location, \n        status: payload.status,\n        episode: payload.episode,\n        created: payload.created,  \n        episodes: payload.episodes,\n        title: payload.title,\n        series: payload.series\n      }\n      let user = state.users.find(usr => usr.isLogged === true)\n      let eqID = user.likedCharacters.find(chr => chr.id === payload.id)\n      if (!eqID) {\n        user.likedCharacters.push(char)\n      }\n    \n    },\n    disLikedChar: (state, {payload}) => {\n      let user = state.users.find(usr => usr.isLogged === true)\n      user.likedCharacters = user.likedCharacters.filter(char => char.id !== payload.charID)\n    },\n    logOut: (state, action) => {\n      let user = state.users.find(usr => usr.isLogged === true)\n      user.isLogged = false\n    }\n  },\n  extraReducers(builder) {\n    builder\n      // getSpeciesAsync cases\n      .addCase(getSpeciesAsync.pending, (state, action) => {\n        state.filteredFetchingStatus = 'loading'\n      })\n      .addCase(getSpeciesAsync.fulfilled, (state, action) => {\n        state.filteredFetchingStatus = 'succeeded'\n        state.displaySpecies = action.payload\n      })\n      .addCase(getSpeciesAsync.rejected, (state, action) => {\n        state.filteredFetchingStatus = 'failed'\n        state.error = action.error.message\n      })\n      // getAllEpisodes cases\n      .addCase(getAllAsync.fulfilled, (state, { payload }) => {\n        if (payload.query === 'episode') {\n          state.displayAllEpisodes = payload.result\n        } else if (payload.query === 'character') {\n          state.displayAllCharacters = payload.result\n        }\n      })\n  }\n})\n\nexport const { \n  flipPage, \n  addUser, \n  likedChar, \n  disLikedChar, \n  filterChar,\n  setFilter\n} = rickMortySlice.actions;\n\n\nexport default rickMortySlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}