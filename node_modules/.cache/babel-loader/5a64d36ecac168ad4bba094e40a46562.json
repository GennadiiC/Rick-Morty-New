{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const rickMortyApi = createApi({\n  reducerPath: 'rickMortyApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://rickandmortyapi.com/api/'\n  }),\n  endpoints: build => ({\n    getCharacterByName: build.query({\n      query: query => `character/?name=${query}`\n    }),\n    getEpisodeForCharacter: build.query({\n      query: query => `episode/${query}`\n    }),\n    getAllCharactersByPage: build.query({\n      query: query => `character/?page=${query}`\n    }),\n    getAllCharacters: build.query({\n      query: () => 'character'\n    }),\n    getAllNames: build.query({\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\n        const promises = new Array(42).fill().map((p, i) => baseQuery(`https://rickandmortyapi.com/api/character/?page=${i + 1}`));\n        await Promise.All(promises).then(namesArr => {\n          if (isSuccess) {\n            return {\n              data: namesArr.map(item => item.data.results.name)\n            };\n          }\n        });\n      }\n    })\n  })\n});\nexport const {\n  useGetCharacterByNameQuery,\n  useGetEpisodeForCharacterQuery,\n  useGetAllCharactersByPageQuery,\n  useGetAllCharactersQuery\n} = rickMortyApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","rickMortyApi","reducerPath","baseQuery","baseUrl","endpoints","build","getCharacterByName","query","getEpisodeForCharacter","getAllCharactersByPage","getAllCharacters","getAllNames","queryFn","arg","queryApi","extraOptions","promises","Array","fill","map","p","i","Promise","All","then","namesArr","isSuccess","data","item","results","name","useGetCharacterByNameQuery","useGetEpisodeForCharacterQuery","useGetAllCharactersByPageQuery","useGetAllCharactersQuery"],"sources":["/Users/g/Documents/myCodeProjects/rick-morty/src/redux/rickMortyApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const rickMortyApi = createApi({\n  reducerPath: 'rickMortyApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://rickandmortyapi.com/api/' }),\n  endpoints: (build) => ({\n    getCharacterByName: build.query({\n      query: (query) => `character/?name=${query}`,\n    }),\n    getEpisodeForCharacter: build.query({\n      query: (query) => `episode/${query}`\n    }),\n    getAllCharactersByPage: build.query({\n      query: (query) => `character/?page=${query}`\n    }),\n    getAllCharacters: build.query({\n      query: () => 'character'\n    }),\n    getAllNames: build.query({\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\n        const promises = new Array(42)\n          .fill()\n          .map((p, i) => baseQuery(`https://rickandmortyapi.com/api/character/?page=${i + 1}`))\n        await Promise.All(promises).then((namesArr) => {\n          if (isSuccess) {\n            return{ data: namesArr.map(item => item.data.results.name) }\n          }\n        })\n      }\n    })\n  }),\n})\n\nexport const { \n  useGetCharacterByNameQuery, \n  useGetEpisodeForCharacterQuery, \n  useGetAllCharactersByPageQuery ,\n  useGetAllCharactersQuery\n} = rickMortyApi;"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,YAAY,GAAGF,SAAS,CAAC;EACpCG,WAAW,EAAE,cADuB;EAEpCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFW;EAGpCC,SAAS,EAAGC,KAAD,KAAY;IACrBC,kBAAkB,EAAED,KAAK,CAACE,KAAN,CAAY;MAC9BA,KAAK,EAAGA,KAAD,IAAY,mBAAkBA,KAAM;IADb,CAAZ,CADC;IAIrBC,sBAAsB,EAAEH,KAAK,CAACE,KAAN,CAAY;MAClCA,KAAK,EAAGA,KAAD,IAAY,WAAUA,KAAM;IADD,CAAZ,CAJH;IAOrBE,sBAAsB,EAAEJ,KAAK,CAACE,KAAN,CAAY;MAClCA,KAAK,EAAGA,KAAD,IAAY,mBAAkBA,KAAM;IADT,CAAZ,CAPH;IAUrBG,gBAAgB,EAAEL,KAAK,CAACE,KAAN,CAAY;MAC5BA,KAAK,EAAE,MAAM;IADe,CAAZ,CAVG;IAarBI,WAAW,EAAEN,KAAK,CAACE,KAAN,CAAY;MACvBK,OAAO,EAAE,OAAOC,GAAP,EAAYC,QAAZ,EAAsBC,YAAtB,EAAoCb,SAApC,KAAkD;QACzD,MAAMc,QAAQ,GAAG,IAAIC,KAAJ,CAAU,EAAV,EACdC,IADc,GAEdC,GAFc,CAEV,CAACC,CAAD,EAAIC,CAAJ,KAAUnB,SAAS,CAAE,mDAAkDmB,CAAC,GAAG,CAAE,EAA1D,CAFT,CAAjB;QAGA,MAAMC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBQ,IAAtB,CAA4BC,QAAD,IAAc;UAC7C,IAAIC,SAAJ,EAAe;YACb,OAAM;cAAEC,IAAI,EAAEF,QAAQ,CAACN,GAAT,CAAaS,IAAI,IAAIA,IAAI,CAACD,IAAL,CAAUE,OAAV,CAAkBC,IAAvC;YAAR,CAAN;UACD;QACF,CAJK,CAAN;MAKD;IAVsB,CAAZ;EAbQ,CAAZ;AAHyB,CAAD,CAA9B;AA+BP,OAAO,MAAM;EACXC,0BADW;EAEXC,8BAFW;EAGXC,8BAHW;EAIXC;AAJW,IAKTlC,YALG"},"metadata":{},"sourceType":"module"}